/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author Hajiebrahimi
 */

#include <bits/stdc++.h>


using namespace std;


typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<double, double> pdd;
typedef pair<ld, ld> pld;
typedef pair<string, string> pss;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define sep                         ' '
#define endl                        '\n'
#define fast_io                     ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define set_random                  mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());


const ll MAXN = 1e6 + 10;
const ll INF = 8e18;
const ll MOD = 1e9 + 7;


template <ll SIZE>
struct DSU
{
    ll par[SIZE] , sz[SIZE];
    DSU()
    {
        fill(par , par + SIZE , -1);
        fill(sz , sz + SIZE , 1);
    }

    ll Find(ll v)
    {
        return (par[v] == -1 ? v : par[v] = Find(par[v]));
    }

    ll Union(ll v , ll u)
    {
        ll pv = Find(v) , pu = Find(u);
        if(pv == pu)    return 0;
        par[pu] = pv;
        sz[pv] += sz[pu];
        return 1;
    }
};

DSU<110> dsu;
ll n,m,ans=-1,f=1;
vector<ll>adj[MAXN];
int main() {
    fast_io;
    cin>>n>>m;
    for(ll i=1;i<=n;i++){
        ll k;
        cin>>k;
        if(k)f=0;
        for(ll j=0;j<k;j++){
            ll l;
            cin>>l;
            adj[l].push_back(i);
        }
    }
    for(ll i=1;i<=m;i++){
        for(auto u:adj[i]){
            dsu.Union(adj[i][0],u);
        }
    }
    for(ll i=1;i<=n;i++){
        //cout<<dsu.par[i]<<sep;
        if(dsu.par[i]==-1)ans++;
    }
    if(f)ans++;
    cout<<ans;
    return 0;
}
